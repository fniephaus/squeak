'From OLPC2.0 of ''24 October 2006'' [latest update: #1358] on 14 June 2007 at 10:08:45 pm'!"Change Set:		DndOutMorphic-takDate:			7 June 2007Author:			Takashi YamamiyaDrag out test script."!!ExtendedClipboardInterface methodsFor: 'general-api-add' stamp: 'tak 6/13/2007 17:21'!useImageReadWriter: aImageReadWriterClass onForm: aForm addClipboardMethod: aAddClipBoardBlock	| estimate buffer stream pngConverter |	(aForm isKindOf: Form) ifTrue: 		[estimate _ (aForm extent x)*(aForm extent y).		estimate _ 1024 max: (estimate * 4 * 3 // 4).		buffer _ ByteArray new: estimate.		stream _ (RWBinaryOrTextStream on: buffer) binary .		pngConverter _ aImageReadWriterClass on: stream.		pngConverter nextPutImage: aForm.		pngConverter close.			aAddClipBoardBlock value: stream contents].		! !!ExtendedClipboardUnixInterface methodsFor: 'general-api-add' stamp: 'tak 6/13/2007 17:15'!addPNGClipboardData: data	self clearClipboard.	self addClipboardData: data dataFormat: 'image/png'! !!HandMorph methodsFor: 'private events' stamp: 'tak 6/7/2007 22:17'!dragOut	| data aStream writer form |	data := self submorphs first getCharacters convertToEncoding: 'utf8'.	self primitiveTriggerData: data dataFormat: 'UTF8_STRING'.	[((CursorWithAlpha extent: self submorphs first extent depth: 32) getCanvas fullDrawMorph: self submorphs first) form.	aStream := ByteArray new writeStream.	writer := PNGReadWriter on: aStream.	writer nextPutImage: form.	writer close.	self primitiveTriggerData: aStream contents dataFormat: 'image/png']! !!HandMorph methodsFor: 'private events' stamp: 'tak 6/7/2007 21:58'!primitiveTriggerData: aByteArray dataFormat: aFormat 	"self new primitiveTriggerData: 'hello' asByteArray dataFormat: 'STRING'" 	<primitive: 'primitiveTriggerData' module:'DropPlugin'>! !!HandMorph methodsFor: 'private events' stamp: 'tak 6/7/2007 21:53'!sendMouseEvent: anEvent 	"Send the event to the morph currently holding the focus, or if none to	the owner of the hand."	| |	(ActiveWorld bounds containsPoint: anEvent position)		ifFalse: [self submorphs size > 0				ifTrue: [self dragOut]].	^ self		sendEvent: anEvent		focus: self mouseFocus		clear: [self mouseFocus: nil]! !!ExtendedClipboardUnixInterface reorganize!('as yet unclassified' clearClipboard)('general-api-read' readAvailableFormats readFormClipboardData readHTMLClipboardData readStringClipboardData readTextClipboardData)('general-api-add' addPNGClipboardData:)!