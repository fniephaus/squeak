#!/bin/sh
# Upload archives from products to a web/ftp site via ssh.
RemoteUser=eliotmiranda@highland-park.dreamhost.com
RemoteRoot=mirandabanda.org/files/Cog/VM
IFS="	
"
REV=
TAG=
LCOG=
LTCOG=
LSPUR=
LTSPUR=
LASPUR=
MCOG=
MTCOG=
MSPUR=
MTSPUR=
WCOG=
WTCOG=
WSPUR=
WTSPUR=
LNSCOG=
LNSSPUR=
MNSCOG=
MNSSPUR=
WNSCOG=
WNSSPUR=
cd `dirname $0`/../products
VERBOSE=
JustUpload=


# By default the Newspeak Cog VMs are not built; superceded by Spur.
function all () {
	CheckDMG=1
	CheckMSI=1
	LCOG=1
	LTCOG=1
	LSPUR=1
	LASPUR=1
	MCOG=1
	MTCOG=1
	MSPUR=1
	WCOG=1
	WSPUR=1
#	LNSCOG=1
	LNSSPUR=1
#	MNSCOG=1
	MNSSPUR=1
#	WNSCOG=1
	WNSSPUR=1
}

if [ $# = 0 ]; then
	all
else
	CheckDMG=
	CheckMSI=
	while [ -n "$1" ]; do
		case "$1" in
		-archives)	JustUpload=JustUpload;;
		-all)	all;;
		-spur)	CheckDMG=1;CheckMSI=1;
				LSPUR=1;LASPUR=1;MSPUR=1;WSPUR=1;LNSSPUR=1;MNSSPUR=1;WNSSPUR=1;;
		-c)		LCOG=1;LTCOG=1;MCOG=1;MTCOG=1;WCOG=1;WMTCOG=1;
				LSPUR=1;LASPUR=1;MSPUR=1;WSPUR=1;;
		-cl)	LCOG=1;LTCOG=1;LSPUR=1;LASPUR=1;;
		-cm)	MCOG=1;MTCOG=1;MSPUR=1;;
		-cw)	WCOG=1;WTCOG=1;WSPUR=1;;
		-ctl)	LTCOG=1;;
		-ctm)	MTCOG=1;;
		-ctw)	WTCOG=1;;
		-nl)	LNSCOG=1;LNSSPUR=1;;
		-nm)	MNSCOG=1;MNSSPUR=1;
				CheckDMG=1;;
		-nw)	WNSCOG=1;WNSSPUR=1;
				CheckMSI=1;;
		-n)		LNSCOG=1;LNSSPUR=1;MNSCOG=1;MNSSPUR=1;WNSCOG=1;WNSSPUR=1;
				CheckDMG=1;CheckMSI=1;;
		-l)		LCOG=1;LTCOG=1;LSPUR=1;LASPUR=1;LNSCOG=1;LNSSPUR=1;;
		-m)		MCOG=1;MTCOG=1;MSPUR=1;MNSCOG=1;MNSSPUR=1;
				CheckDMG=1;;
		-w)		WCOG=1;WTCOG=1;WSPUR=1;WNSCOG=1;WNSSPUR=1;
				CheckMSI=1;CheckDMG=1;;
		-v)		VERBOSE=1;;
		-r)		shift;REV="$1";;
		-t)		shift;TAG="$1";;
		-T)		TEST=1;;
		-?|-h)  echo usage: $0 [-all -l -m -w -c -n -cl -cm -cw -ctl -ctm -ctw -nl -nm -nw -archives -r REV -t TAG -T]; exit 0;;
		*)	echo usage: $0 [-all -l -m -w -c -n -cl -cm -cw -ctl -ctm -ctw -nl -nm -nw -archives -r REV -t TAG -T]; exit 1;;
		esac
		shift
	done
fi

if [ -z "$REV" ]; then
	REV="`svnversion .. | sed 's/^.*://'`"
	case $REV in
	*M)	echo -n "source tree is modified, are you sure you want to continue? "
		read a
		case $a in
		y|Y)	;;
		*)		exit 1
		esac
		REV="`svnversion | sed 's/^.*://' | sed 's/M//'`";;
	esac
fi

if [ -z "$TAG" ]; then
	TAG=`date +%y.%U.`$REV
fi
echo REV=$REV TAG=$TAG

ARCHIVES=
test -n "$LCOG" && ARCHIVES="$ARCHIVES	coglinux-$TAG.tgz	coglinuxht-$TAG.tgz"
test -n "$LTCOG" && ARCHIVES="$ARCHIVES	cogmtlinuxht-$TAG.tgz"
test -n "$LSPUR" && ARCHIVES="$ARCHIVES	cogspurlinux-$TAG.tgz	cogspurlinuxht-$TAG.tgz"
test -n "$LASPUR" && ARCHIVES="$ARCHIVES	cogspurlinuxhtARM-$TAG.tgz"
test -n "$LTSPUR" && ARCHIVES="$ARCHIVES	cogspurmtlinuxht-$TAG.tgz"
test -n "$MCOG" && ARCHIVES="$ARCHIVES	Cog.app-$TAG.tgz	CogSpur.app-$TAG.tgz"
test -n "$MTCOG" && ARCHIVES="$ARCHIVES	CogMT.app-$TAG.tgz"
test -n "$MSPUR" && ARCHIVES="$ARCHIVES	CogSpur.app-$TAG.tgz"
test -n "$MTSPUR" && ARCHIVES="$ARCHIVES	CogMTSpur.app-$TAG.tgz"
test -n "$WCOG" && ARCHIVES="$ARCHIVES	cogwin-$TAG.zip"
test -n "$WTCOG" && ARCHIVES="$ARCHIVES	cogmtwin-$TAG.zip"
test -n "$WSPUR" && ARCHIVES="$ARCHIVES	cogspurwin-$TAG.zip"
test -n "$WTSPUR" && ARCHIVES="$ARCHIVES	cogspurmtwin-$TAG.zip"

test -n "$LNSCOG" && ARCHIVES="$ARCHIVES	nsvmlinux-$TAG.tgz	nsvmlinuxht-$TAG.tgz"
test -n "$LNSSPUR" && ARCHIVES="$ARCHIVES	nsvmspurlinux-$TAG.tgz	nsvmspurlinuxht-$TAG.tgz	nsvmspurlinuxhtARM-$TAG.tgz"
test -n "$MNSCOG" && ARCHIVES="$ARCHIVES	Newspeak Virtual Machine-$TAG.dmg	Newspeak Virtual Machine.app-$TAG.tgz"
test -n "$MNSSPUR" && ARCHIVES="$ARCHIVES	Newspeak Spur Virtual Machine-$TAG.dmg	Newspeak Spur Virtual Machine.app-$TAG.tgz"
test -n "$WNSCOG" && ARCHIVES="$ARCHIVES	nsvmwin-$TAG.zip	nsvm-$TAG.msi"
test -n "$WNSSPUR" && ARCHIVES="$ARCHIVES	nsvmspurwin-$TAG.zip	nsvm-spur-$TAG.msi"

if [ -n "$VERBOSE" ]; then
	for a in $ARCHIVES; do
		echo upload $a
	done
fi
if [ -n "$CheckDMG" -a -n "$MNSCOG" -a ! -f "Newspeak Virtual Machine-$TAG.dmg" ]; then
	NMID=../build.macos32x86/newspeak.cog.v3/installer
	if [ -f "Newspeak Virtual Machine-$TAG.dmg" ]; then
		true
	elif [ -f "$NMID/Newspeak Virtual Machine-$TAG.dmg" ]; then
		ln "$NMID/Newspeak Virtual Machine-$TAG.dmg" .
	else
		echo Newspeak Virtual Machine-$TAG.dmg is missing 1>&2
		exit 1
	fi
fi
if [ -n "$CheckDMG" -a -n "$MNSSPUR" -a ! -f "Newspeak Spur Virtual Machine-$TAG.dmg" ]; then
	NMID=../build.macos32x86/newspeak.cog.spur/installer
	if [ -f "Newspeak Spur Virtual Machine-$TAG.dmg" ]; then
		true
	elif [ -f "$NMID/Newspeak Spur Virtual Machine-$TAG.dmg" ]; then
		ln "$NMID/Newspeak Spur Virtual Machine-$TAG.dmg" .
	else
		echo Newspeak Spur Virtual Machine-$TAG.dmg is missing 1>&2
		exit 1
	fi
fi
if [ -n "$CheckMSI" -a -n "$WNSCOG" -a ! -f nsvm-$TAG.msi ]; then
	NMID=../build.win32x86/newspeak.cog.v3/installer
	if [ -f nsvm-$TAG.msi ]; then
		true
	elif [ -f "$NWID/nsvm-$TAG.msi" ]; then
		ln "$NWID/nsvm-$TAG.msi" .
	else
		echo nsvm-$TAG.msi is missing 1>&2
		exit 1
	fi
fi
if [ -n "$CheckMSI" -a -n "$WNSSPUR" -a ! -f nsvm-spur-$TAG.msi ]; then
	NMID=../build.win32x86/newspeak.cog.spur/installer
	if [ -f nsvm-spur-$TAG.msi ]; then
		true
	elif [ -f "$NWID/nsvm-spur-$TAG.msi" ]; then
		ln "$NWID/nsvm-spur-$TAG.msi" .
	else
		echo nsvm-spur-$TAG.msi is missing 1>&2
		exit 1
	fi
fi
if [ -z "$JustUpload" ]; then
  if [ ! -f ../history/README.$REV ]; then
	cat <<THEEND >../history/README.$REV
N.B. For Squeak/Pharo/Croquet please use the archives whose names begin with
     Cog or cog.  The archives whose names begin with nsvm or Newspeak are
     for Newspeak and are missing plugins required by Squeak/Pharo/Croquet.
     VMs with "mt" or "MT" in the name are multi-threaded VMs which support
     non-blocking FFI calls.  The archives containing "Spur" or "spur" are
     VMs using the new Spur object representation and garbage collector and
     should be used with Spur-format Squeak/Pharo/Croquet or Newspeak images.
     Squeak V5 and Newspeak have moved to Spur.

     Linux
     There are two variants of the Linux VMs; those ending in "ht" have a
     heartbeat thread, while those that don't use an interval timer for the
     heartbeat (the Windows and Mac VMs have a threaded heartbeat).  The
     threaded heartbeat is better (for example, signals from the interval timer
     interfere with system calls, etc), but to use it one must have a kernel
     later than 2.6.12 and configure linux to allow the VM to use multiple
     thread priorities.  To do so, create a file called VM.conf where VM is
     the name of the vm executable ("squeak" for the Squeak vm, "nsvm" for
     the Newspeak vm) in /etc/security/limits.d/ with contents:
*       hard    rtprio  2
*       soft    rtprio  2

     e.g.

sudo cat >/etc/security/limits.d/squeak.conf <<END
*       hard    rtprio  2
*       soft    rtprio  2
END
sudo cp /etc/security/limits.d/squeak.conf /etc/security/limits.d/nsvm.conf

     Only new processes will have the new security settings. Users must log
     out and log back in for the limits to take effect.  Services must stop
     and then restart for the changes to take effect.  To use this VM as a
     daemon, e.g. under daemontools, you'll need to raise the limit manually.
     Make sure you're using bash and before your launch command, raise the max
     thread priority limit with ulimit -r 2, e.g. versions of the following
     script will work on ubuntu
        #!/bin/bash
        cd /path/to/squeak/directory
        ulimit -r 2
        exec setuidgid <account> ./coglinuxht/squeak -vm display-null -vm sound-null squeak.image

     Windows
     The Windows VMs are "dpiAware", which means that by default the display is
     not scaled and display pixels are mapped 1 to 1 to the screen.  If this
     behaviour is not desired you can enable scaling by either editing the
     relevant manifest file (e.g.  Squeak.exe.manifest), changing the "true" in
     <dpiAware>true</dpiAware> to "false", or simply deleting the manifest file.
THEEND
	echo getting svn log
	svn log ../platforms/Cross/vm/sqSCCSVersion.h >>../history/README.$REV
	vi ../history/README.$REV
  fi
  echo compiling ChangeHistory
  THEM="`ls ../history/README.* | sort -n -t. -k2 -r`"
  >ChangeHistory
  for r in $THEM; do
	m="`echo $r | sed 's/..\/history\/README.//'`"
	if [ "$REV" -ge "$m" ]; then
		test $REV -ne $m && echo "-------------------------------" >>ChangeHistory
		ls -lT $r | awk '{ print $6, $7, $9; }' >>ChangeHistory
		if grep -s "^------------" $r >/dev/null; then
			awk '{if (line>0) print};/^--------/ {line=1}' $r >>ChangeHistory
		else
			cat $r >>ChangeHistory
		fi
		echo >>ChangeHistory
	fi
  done
fi
if [ "$T" = 1 ]; then
SSH="echo ssh"
SCP="echo scp"
else
SSH=ssh
SCP=scp
fi
$SSH -x $RemoteUser mkdir $RemoteRoot/VM.r$REV
if [ -z "$JustUpload" ]; then
	echo scp -p ChangeHistory ../history/README.$REV $RemoteUser:$RemoteRoot/VM.r$REV
	$SCP -p ChangeHistory ../history/README.$REV $RemoteUser:$RemoteRoot/VM.r$REV
fi
echo scp -p $ARCHIVES "$@" $RemoteUser:$RemoteRoot/VM.r$REV
$SCP -p $ARCHIVES "$@" $RemoteUser:$RemoteRoot/VM.r$REV
echo ssh $RemoteUser chmod a-w $RemoteRoot/VM.r$REV/* \\\; ls -al $RemoteRoot/VM.r$REV
$SSH $RemoteUser chmod a-w $RemoteRoot/VM.r$REV/* \; ls -al $RemoteRoot/VM.r$REV

if [ "$T" != 1 ]; then
test -x image/makegetvmscripts.sh && (image/makegetvmscripts.sh)
fi
test -x /usr/bin/pbcopy && (echo "... at http://www.mirandabanda.org/files/Cog/VM/VM.r$REV"; echo; tail -n +39 ../history/README.$REV) | pbcopy
